-- Total number of tests
SELECT COUNT(*) AS total_tests FROM Test;

-- List of score, specifying for each the name and first name of the student who obtained it
SELECT score, s.name, s.firsname
FROM Notation n
JOIN Student s ON n.numstud = s.numstud;

-- List of score, specifying for each the name and first name of the student who obtained it and the wording of the matter concerned
SELECT n.score, s.name, s.firsname, m.wording
FROM Notation n
JOIN Student s ON n.numstud = s.numstud
JOIN Test t ON n.numtest = t.numtest
JOIN Matter m ON t.codemat = m.codemat;

-- List of score greater than or equal to 10
SELECT * FROM Notation WHERE score >= 10;

-- Last name and first name of the students who obtained at least a score equal to 20
SELECT s.name, s.firsname
FROM Notation n
JOIN Student s ON n.numstud = s.numstud
WHERE score = 20;

-- Average scores for each student (indicate name and first name)
SELECT s.name, s.firsname, AVG(n.score) AS average_score
FROM Notation n
JOIN Student s ON n.numstud = s.numstud
GROUP BY s.name, s.firsname;

-- List of tests whose date is between January 1 and June 30, 2014
SELECT * FROM Test WHERE testdate BETWEEN '2014-01-01' AND '2014-06-30';

-- List of tests (number, date, and place) including the matter of the subject
SELECT t.numtest, t.testdate, t.place, m.wording
FROM Test t
JOIN Matter m ON t.codemat = m.codemat;

-- Average scores for each student (indicate name and first name), ranked from best to worst
SELECT s.name, s.firsname, AVG(n.score) AS average_score
FROM Notation n
JOIN Student s ON n.numstud = s.numstud
GROUP BY s.name, s.firsname
ORDER BY average_score DESC;

-- Average scores for matter (indicate the wording) comprising more than one test
SELECT m.wording, AVG(n.score) AS average_score
FROM Notation n
JOIN Test t ON n.numtest = t.numtest
JOIN Matter m ON t.codemat = m.codemat
GROUP BY m.wording
HAVING COUNT(t.numtest) > 1;

-- Average of score obtained in the tests (indicate the number of the test) where less than 6 students were rated
SELECT t.numtest, AVG(n.score) AS average_score
FROM Notation n
JOIN Test t ON n.numtest = t.numtest
GROUP BY t.numtest
HAVING COUNT(n.numstud) < 6;
